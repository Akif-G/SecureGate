{"version":3,"sources":["Components/Toolbar/NavigationItems/NavigationItem/NavigationItem.js","Components/Toolbar/NavigationItems/NavigationItems.js","Components/Toolbar/Toolbar.js","Components/Background/Background.js","Components/Button/Button.js","Components/Check/Check.js","Components/House/House.js","Components/Home/HomeContent/HomeContent.js","Components/Home/Home.js","Components/Social/Social.js","App.js","serviceWorker.js","index.js"],"names":["navigationItem","props","className","activeClassName","activeStyle","styles","to","link","exact","children","NavigationItems","backgroundColor","viewBox","d","Toolbar","BackGround","onWindowResize","camera","aspect","window","innerWidth","innerHeight","updateProjectionMatrix","renderer","setSize","animate","cub","rotation","x","y","z","cub2","cub3","position","frameId","requestAnimationFrame","renderScene","time","Date","now","light1","Math","sin","cos","light2","light3","light4","light5","light6","light7","light8","light11","light12","light13","light14","light15","light16","light17","light18","render","scene","start","stop","cancelAnimationFrame","this","THREE","fog","sphere","add","color","random","objectMaterial","roughness","metalness","objectMaterial2","objectMaterial3","material","material2","material3","geometry","mode","background","antialias","setPixelRatio","devicePixelRatio","mount","appendChild","domElement","addEventListener","removeChild","ref","Component","Button","NotClick","type","style","left","right","top","BG","width","maxWidth","userSelect","value","onClick","e","Clicked","Web3","require","Check","state","web3","contract","accounts","response","componentDidMount","a","ethereum","eth","getAccounts","net","getId","Contract","Certification","abi","instance","setState","swal","console","error","preventDefault","fontSize","textAlign","padding","margin","display","flexDirection","toString","target","methods","CheckCertificate","call","err","res","i","push","wordBreak","overflowWrap","flexWrap","concat","onSubmit","placeholder","House","buttons","address","enable","log","runExample","Methods","key","AddCertificate","send","from","on","GiveCertificate","SeeCertificates","SeePeople","length","map","b","num","inside","zIndex","bottom","HomeContent","href","Home","homeContent","justifyContent","alignItems","Social","invertStyle","filter","id","ChangeMode","App","backGround","height","basename","path","component","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2565ab06.chunk.js","sourcesContent":["import React from 'react';\r\nimport './NavigationItem.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst navigationItem = (props) => {\r\n    return (\r\n        <div className=\"NavigationItem\" >\r\n            <NavLink activeClassName=\"active\" activeStyle={props.styles} to={props.link} exact>{props.children} </NavLink>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default navigationItem;\r\n","import React  from 'react';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\nimport './NavigationItems.css'\r\nconst NavigationItems=(props)=>{\r\n    return(\r\n    <div className=\"NavigationItems\">\r\n        <NavigationItem className=\"PartOne\" styles={{backgroundColor:\"rgb(242,183,5)\" }}\r\n        link=\"/house\"\r\n        >Certification House</NavigationItem>\r\n        <NavigationItem className=\"PartOne\" styles={{backgroundColor:\"rgb(4,173,191)\"}}\r\n        link=\"/\"\r\n        >Home            \r\n        <svg className=\"Svg-icon\" viewBox=\"0 0 20 20\">\r\n        <path d=\"M18.121,9.88l-7.832-7.836c-0.155-0.158-0.428-0.155-0.584,0L1.842,9.913c-0.262,0.263-0.073,0.705,0.292,0.705h2.069v7.042c0,0.227,0.187,0.414,0.414,0.414h3.725c0.228,0,0.414-0.188,0.414-0.414v-3.313h2.483v3.313c0,0.227,0.187,0.414,0.413,0.414h3.726c0.229,0,0.414-0.188,0.414-0.414v-7.042h2.068h0.004C18.331,10.617,18.389,10.146,18.121,9.88 M14.963,17.245h-2.896v-3.313c0-0.229-0.186-0.415-0.414-0.415H8.342c-0.228,0-0.414,0.187-0.414,0.415v3.313H5.032v-6.628h9.931V17.245z M3.133,9.79l6.864-6.868l6.867,6.868H3.133z\">\r\n        </path>\r\n\t\t</svg>\r\n        </NavigationItem> \r\n        <NavigationItem  className=\"PartOne\" styles={{backgroundColor:\"rgb(219,68,55)\" }}\r\n        link=\"/check\"\r\n        >Check a Certificate!\r\n        </NavigationItem>\r\n    </div>\r\n)\r\n}\r\n\r\nexport default NavigationItems;\r\n","import React  from 'react';\r\nimport './Toolbar.css';\r\nimport NavigationItems from './NavigationItems/NavigationItems';\r\n\r\n\r\nconst Toolbar=(props )=>{\r\n    return(\r\n        <header className=\"Toolbar\" >\r\n            <NavigationItems></NavigationItems>\r\n        </header>\r\n    )\r\n};\r\n\r\nexport default Toolbar;","import React, { Component } from 'react';\r\nimport * as THREE from \"three\";\r\n\r\nclass BackGround extends Component {\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.camera = new THREE.PerspectiveCamera(50, window.innerWidth / window.innerHeight, 1, 1000);\r\n\t\tthis.camera.position.z = 100;\r\n\r\n\t\tthis.scene = new THREE.Scene();\r\n\t\tthis.scene.fog = new THREE.Fog(0x000000, 200)\r\n\t\t//model\r\n\r\n\r\n\t\tvar sphere = new THREE.SphereBufferGeometry(1.1, 16, 8);\r\n\r\n\t\t//this.lights\r\n\r\n\t\tthis.light1 = new THREE.PointLight(0xff0040, 1.5, 10, 0);\r\n\t\tthis.light1.add(new THREE.Mesh(sphere, new THREE.MeshBasicMaterial({ color: (Math.random() * 0xFFFFFF << 0) })));\r\n\t\tthis.scene.add(this.light1);\r\n\r\n\t\tthis.light2 = new THREE.PointLight(0x0040ff, 1.5, 10, 0);\r\n\t\tthis.light2.add(new THREE.Mesh(sphere, new THREE.MeshBasicMaterial({ color: (Math.random() * 0xFFFFFF << 0) })));\r\n\t\tthis.scene.add(this.light2);\r\n\r\n\t\tthis.light3 = new THREE.PointLight(0x80ff80, 1.5, 10, 0);\r\n\t\tthis.light3.add(new THREE.Mesh(sphere, new THREE.MeshBasicMaterial({ color: (Math.random() * 0xFFFFFF << 0) })));\r\n\t\tthis.scene.add(this.light3);\r\n\r\n\t\tthis.light4 = new THREE.PointLight(0xffaa00, 1.5, 10, 0);\r\n\t\tthis.light4.add(new THREE.Mesh(sphere, new THREE.MeshBasicMaterial({ color: (Math.random() * 0xFFFFFF << 0) })));\r\n\t\tthis.scene.add(this.light4);\r\n\r\n\t\tthis.light5 = new THREE.PointLight(0xff0040, 1.5, 10, 0);\r\n\t\tthis.light5.add(new THREE.Mesh(sphere, new THREE.MeshBasicMaterial({ color: (Math.random() * 0xFFFFFF << 0) })));\r\n\t\tthis.scene.add(this.light5);\r\n\r\n\t\tthis.light6 = new THREE.PointLight(0x0040ff, 1, 10, 0);\r\n\t\tthis.light6.add(new THREE.Mesh(sphere, new THREE.MeshBasicMaterial({ color: (Math.random() * 0xFFFFFF << 0) })));\r\n\t\tthis.scene.add(this.light6);\r\n\r\n\t\tthis.light7 = new THREE.PointLight(0x80ff80, 1, 10, 0);\r\n\t\tthis.light7.add(new THREE.Mesh(sphere, new THREE.MeshBasicMaterial({ color: (Math.random() * 0xFFFFFF << 0) })));\r\n\t\tthis.scene.add(this.light7);\r\n\r\n\t\tthis.light8 = new THREE.PointLight(0xffaa00, 1, 10, 0);\r\n\t\tthis.light8.add(new THREE.Mesh(sphere, new THREE.MeshBasicMaterial({ color: (Math.random() * 0xFFFFFF << 0) })));\r\n\t\tthis.scene.add(this.light8);\r\n\r\n\t\tthis.light11 = new THREE.PointLight(0xff0040, 1, 10, 0);\r\n\t\tthis.light11.add(new THREE.Mesh(sphere, new THREE.MeshBasicMaterial({ color: (Math.random() * 0xFFFFFF << 0) })));\r\n\t\tthis.scene.add(this.light11);\r\n\r\n\t\tthis.light12 = new THREE.PointLight(0x0040ff, 1, 10, 0);\r\n\t\tthis.light12.add(new THREE.Mesh(sphere, new THREE.MeshBasicMaterial({ color: (Math.random() * 0xFFFFFF << 0) })));\r\n\t\tthis.scene.add(this.light12);\r\n\r\n\t\tthis.light13 = new THREE.PointLight(0x80ff80, 1, 10, 0);\r\n\t\tthis.light13.add(new THREE.Mesh(sphere, new THREE.MeshBasicMaterial({ color: (Math.random() * 0xFFFFFF << 0) })));\r\n\t\tthis.scene.add(this.light13);\r\n\r\n\t\tthis.light14 = new THREE.PointLight(0xffaa00, 1, 10, 0);\r\n\t\tthis.light14.add(new THREE.Mesh(sphere, new THREE.MeshBasicMaterial({ color: (Math.random() * 0xFFFFFF << 0) })));\r\n\t\tthis.scene.add(this.light14);\r\n\r\n\t\tthis.light15 = new THREE.PointLight(0xff0040, 1, 10, 0);\r\n\t\tthis.light15.add(new THREE.Mesh(sphere, new THREE.MeshBasicMaterial({ color: (Math.random() * 0xFFFFFF << 0) })));\r\n\t\tthis.scene.add(this.light15);\r\n\r\n\t\tthis.light16 = new THREE.PointLight(0x0040ff, 1, 10, 0);\r\n\t\tthis.light16.add(new THREE.Mesh(sphere, new THREE.MeshBasicMaterial({ color: (Math.random() * 0xFFFFFF << 0) })));\r\n\t\tthis.scene.add(this.light16);\r\n\r\n\t\tthis.light17 = new THREE.PointLight(0x80ff80, 1, 10, 0);\r\n\t\tthis.light17.add(new THREE.Mesh(sphere, new THREE.MeshBasicMaterial({ color: (Math.random() * 0xFFFFFF << 0) })));\r\n\t\tthis.scene.add(this.light17);\r\n\r\n\t\tthis.light18 = new THREE.PointLight(0xffaa00, 1, 10, 0);\r\n\t\tthis.light18.add(new THREE.Mesh(sphere, new THREE.MeshBasicMaterial({ color: (Math.random() * 0xFFFFFF << 0) })));\r\n\t\tthis.scene.add(this.light18);\r\n\r\n\t\t//cubes\r\n\t\tvar objectMaterial = new THREE.MeshStandardMaterial({ color: 0xDB4437, roughness: 0.7, metalness: 0.1, });\r\n\t\tvar objectMaterial2 = new THREE.MeshStandardMaterial({ color: 0x04ADBF, roughness: 0.7, metalness: 0.1, });\r\n\t\tvar objectMaterial3 = new THREE.MeshStandardMaterial({ color: 0xF2B705, roughness: 0.7, metalness: 0.1, });\r\n\r\n\t\t//for white screen\r\n\t\tlet material = new THREE.MeshBasicMaterial({ color: 0xDB4437 });\r\n\t\tlet material2 = new THREE.MeshBasicMaterial({ color: 0x04ADBF });\r\n\t\tlet material3 = new THREE.MeshBasicMaterial({ color: 0xF2B705 });\r\n\r\n\t\tvar geometry = new THREE.BoxGeometry(5, 5, 5);\r\n\r\n\t\tif (this.props.mode === \"white\") {\r\n\t\t\tthis.scene.background = new THREE.Color(0xffffff);\r\n\t\t\tthis.cub = new THREE.Mesh(geometry, material);\r\n\t\t\tthis.scene.add(this.cub);\r\n\r\n\t\t\tthis.cub2 = new THREE.Mesh(geometry, material2);\r\n\t\t\tthis.scene.add(this.cub2);\r\n\r\n\t\t\tthis.cub3 = new THREE.Mesh(geometry, material3);\r\n\t\t\tthis.scene.add(this.cub3);\r\n\t\t}\r\n\t\telse {\r\n\t\tthis.cub = new THREE.Mesh(geometry, objectMaterial);\r\n\t\t\tthis.scene.add(this.cub);\r\n\r\n\t\t\tthis.cub2 = new THREE.Mesh(geometry, objectMaterial2);\r\n\t\t\tthis.scene.add(this.cub2);\r\n\r\n\t\t\tthis.cub3 = new THREE.Mesh(geometry, objectMaterial3);\r\n\t\t\tthis.scene.add(this.cub3);\r\n\t\t}\r\n\r\n\r\n\r\n\t\t//this.renderer\r\n\r\n\t\tthis.renderer = new THREE.WebGLRenderer({ antialias: true });\r\n\t\tthis.renderer.setPixelRatio(window.devicePixelRatio);\r\n\t\tthis.renderer.setSize(window.innerWidth, window.innerHeight);\r\n\t\tthis.mount.appendChild(this.renderer.domElement)\r\n\r\n\t\twindow.addEventListener('resize', this.onWindowResize, false);\r\n\r\n\r\n\t\tthis.start();\r\n\t}\r\n\r\n\t onWindowResize=()=> {\r\n\t\tthis.camera.aspect = window.innerWidth / window.innerHeight;\r\n\t\tthis.camera.updateProjectionMatrix();\r\n\t\tthis.renderer.setSize(window.innerWidth, window.innerHeight);\r\n\t}\r\n\r\n\tanimate = () => {\r\n\r\n\t\tthis.cub.rotation.x += 0.01;\r\n\t\tthis.cub.rotation.y += 0.01;\r\n\t\tthis.cub.rotation.z += 0.01;\r\n\t\tthis.cub2.rotation.x += 0.01;\r\n\t\tthis.cub2.rotation.z += 0.01;\r\n\t\tthis.cub2.rotation.y += 0.01;\r\n\t\tthis.cub3.rotation.x += 0.01;\r\n\t\tthis.cub3.rotation.z += 0.01;\r\n\t\tthis.cub3.rotation.y += 0.01;\r\n\r\n\r\n\t\tthis.cub.position.x = 20;\r\n\t\tthis.cub.position.y = 0;\r\n\t\tthis.cub.position.z = 50;\r\n\r\n\r\n\t\tthis.cub2.position.x = 0;\r\n\t\tthis.cub2.position.y = 0;\r\n\t\tthis.cub2.position.z = 50;\r\n\r\n\r\n\t\tthis.cub3.position.x = -20;\r\n\t\tthis.cub3.position.y = 0;\r\n\t\tthis.cub3.position.z = 50;\r\n\r\n\t\tthis.frameId = window.requestAnimationFrame(this.animate)\r\n\t\tthis.renderScene()\r\n\t}\r\n\r\n\trenderScene = () => {\r\n\t\tvar time = Date.now() * 0.0005;\r\n\r\n\t\tthis.light1.position.x = Math.sin(time * 0.7) * 20;\r\n\t\tthis.light1.position.y = Math.cos(time * 0.5) * 50;\r\n\t\tthis.light1.position.z = Math.cos(time * 0.3) * 50;\r\n\r\n\t\tthis.light2.position.x = Math.cos(time * 0.3) * 90;\r\n\t\tthis.light2.position.y = Math.sin(time * 0.5) * 20;\r\n\t\tthis.light2.position.z = Math.sin(time * 0.7) * 90;\r\n\r\n\t\tthis.light3.position.x = Math.sin(time * 0.7) * 30;\r\n\t\tthis.light3.position.y = Math.cos(time * 0.3) * 40;\r\n\t\tthis.light3.position.z = Math.sin(time * 0.5) * 20;\r\n\r\n\t\tthis.light4.position.x = Math.sin(time * 0.3) * 100;\r\n\t\tthis.light4.position.y = Math.cos(time * 0.7) * 40;\r\n\t\tthis.light4.position.z = Math.sin(time * 0.5) * 20;\r\n\r\n\t\tthis.light5.position.x = Math.cos(time * 0.7) * 10;\r\n\t\tthis.light5.position.y = Math.sin(time * 0.5) * 20;\r\n\t\tthis.light5.position.z = Math.cos(time * 0.7) * 100;\r\n\r\n\t\tthis.light6.position.x = Math.sin(time * 0.5) * 40;\r\n\t\tthis.light6.position.y = Math.sin(time * 0.5) * 40;\r\n\t\tthis.light6.position.z = Math.sin(time * 0.5) * 30;\r\n\r\n\t\tthis.light7.position.x = Math.cos(time * 0.7) * 60;\r\n\t\tthis.light7.position.y = Math.cos(time * 0.3) * 90;\r\n\t\tthis.light7.position.z = Math.sin(time * 0.2) * 30;\r\n\r\n\t\tthis.light8.position.x = Math.cos(time * 0.3) * 40;\r\n\t\tthis.light8.position.y = Math.cos(time * 0.7) * 10;\r\n\t\tthis.light8.position.z = Math.cos(time * 0.1) * 80;\r\n\r\n\t\tthis.light11.position.x = Math.sin(time * 0.7) * 20;\r\n\t\tthis.light11.position.y = Math.cos(time * 0.8) * 80;\r\n\t\tthis.light11.position.z = Math.cos(time * 0.3) * 50;\r\n\r\n\t\tthis.light12.position.x = Math.cos(time * 0.8) * 90;\r\n\t\tthis.light12.position.y = Math.sin(time * 0.5) * 20;\r\n\t\tthis.light12.position.z = Math.sin(time * 0.2) * 50;\r\n\r\n\t\tthis.light13.position.x = Math.sin(time * 0.7) * 20;\r\n\t\tthis.light13.position.y = Math.cos(time * 0.2) * 40;\r\n\t\tthis.light13.position.z = Math.sin(time * 0.5) * 20;\r\n\r\n\t\tthis.light14.position.x = Math.sin(time * 0.6) * 100;\r\n\t\tthis.light14.position.y = Math.cos(time * 0.7) * 30;\r\n\t\tthis.light14.position.z = Math.sin(time * 0.5) * 200;\r\n\r\n\t\tthis.light15.position.x = Math.cos(time * 0.7) * 60;\r\n\t\tthis.light15.position.y = Math.sin(time * 0.5) * 50;\r\n\t\tthis.light15.position.z = Math.cos(time * 0.1) * 100;\r\n\r\n\t\tthis.light16.position.x = Math.sin(time * 0.3) * 40;\r\n\t\tthis.light16.position.y = Math.sin(time * 0.9) * 20;\r\n\t\tthis.light16.position.z = Math.sin(time * 0.7) * 20;\r\n\r\n\t\tthis.light17.position.x = Math.cos(time * 0.7) * 40;\r\n\t\tthis.light17.position.y = Math.cos(time * 0.4) * 90;\r\n\t\tthis.light17.position.z = Math.sin(time * 0.5) * 30;\r\n\r\n\t\tthis.light18.position.x = Math.cos(time * 0.4) * 40;\r\n\t\tthis.light18.position.y = Math.cos(time * 0.7) * 20;\r\n\t\tthis.light18.position.z = Math.cos(time * 0.5) * 80;\r\n\t\tthis.renderer.render(this.scene, this.camera);\r\n\r\n\t}\r\n\r\n\tstart = () => {\r\n\t\tif (!this.frameId) {\r\n\t\t\tthis.frameId = requestAnimationFrame(this.animate)\r\n\t\t}\r\n\t}\r\n\r\n\tstop = () => {\r\n\t\tcancelAnimationFrame(this.frameId)\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tthis.stop()\r\n\t\tthis.mount.removeChild(this.renderer.domElement)\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div ref={ref => (this.mount = ref)} />\r\n\t\t)\r\n\t}\r\n}\r\nexport default BackGround;","import React from 'react';\r\nimport './Button.css'\r\n\r\nconst Button = (props) => {\r\n    if (props.NotClick) {\r\n        return (\r\n            <button\r\n                className=\"CustomButtonNotClickable\" type=\"button\" style={{ left: props.left, right: props.right, top: props.top, backgroundColor: props.BG, width: props.width, maxWidth: props.maxWidth ,userSelect: \"text\"}}\r\n            >{props.value} {props.children}</button>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <button\r\n                className=\"CustomButton\" type=\"button\" style={{ left: props.left, right: props.right, top: props.top, backgroundColor: props.BG, width: props.width, maxWidth: props.maxWidth }}\r\n                onClick={(e) => props.Clicked(e, props.value)}\r\n            >{props.value} {props.children}</button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Button;","import React, { Component } from 'react';\r\nimport Button from '../Button/Button';\r\nimport './Check.css'\r\nimport Certification from \"../../contracts/Certification.json\";\r\nimport swal from \"sweetalert\";\r\nconst Web3 = require('web3');\r\n\r\nclass Check extends Component {\r\n    state = { web3: null, contract: null, accounts: null, response: null ,backgroundColor:\"rgb(219,68,55)\"};\r\n\r\n    componentDidMount = async () => {\r\n        try {\r\n            const web3 = await new Web3(window.ethereum);\r\n            //await window.ethereum.enable();\r\n            // Use web3 to get the user's accounts.\r\n            const accounts = await web3.eth.getAccounts();\r\n\r\n            // Get the contract instance.\r\n            const networkId = await web3.eth.net.getId();\r\n            const instance = await new web3.eth.Contract(\r\n                Certification.abi,\r\n                '0x054292065bbec2e6ed374f85e8a938f05f5f2f48',\r\n            )\r\n            this.setState({ web3, contract: instance, accounts })\r\n        }\r\n        catch{\r\n            swal(\r\n                'Metamask?', `Failed to load accounts or contract.\\nCheck if Metamask exist...\\n We need Metamask to reach to Ethereum Blockchain.\\nTry refreshing the page maybe?`, \"error\"\r\n            );\r\n            console.error(\"Probably no metamask!\");\r\n        }\r\n    };\r\n\r\n    Check = (e) => {\r\n        e.preventDefault();     \r\n        this.setState({\r\n            response:\r\n                <Button\r\n                NotClick\r\n                    width=\"auto\"\r\n                    maxWidth=\"60%\"\r\n                    right=\"20rem\"\r\n                    value={\r\n                        <div\r\n                            style={{ fontSize: \"1.4rem\", textAlign: \"left\", padding: 0, margin: 0 }}\r\n                        >\r\n                            <div style={{ display: \"flex\", flexDirection: \"row\", padding: \"0.2rem\", margin: 0 }}>\r\n                                <p style={{ color: this.state.backgroundColor, backgroundColor: \"#333333\", padding: 0, margin: 0 ,userSelect: \"none\"}}>Waiting... </p>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                    Clicked={() => { }}\r\n                    top={(1 * 7 + 1).toString() + \"rem\"}\r\n                    BG={this.state.backgroundColor}\r\n                ></Button>\r\n        });\r\n        if (e.target[0].value) {\r\n            try {\r\n                this.state.contract.methods.CheckCertificate(e.target[0].value).call((err, res) => {\r\n                    let response = [];\r\n                    if(res){\r\n                    if (res[\"0\"] == \"0x0000000000000000000000000000000000000000\") {\r\n                        this.setState({\r\n                            response:\r\n                                <Button\r\n                                    NotClick\r\n                                    width=\"auto\"\r\n                                    maxWidth=\"60%\"\r\n                                    right=\"20rem\"\r\n                                    value={\r\n                                        <div\r\n                                            style={{ fontSize: \"1.4rem\", textAlign: \"left\", padding: 0, margin: 0 }}\r\n                                        >\r\n                                            <div style={{ display: \"flex\", flexDirection: \"row\", padding: \"0.2rem\", margin: 0 }}>\r\n                                                <p style={{ color: this.state.backgroundColor, backgroundColor: \"#333333\",userSelect: \"none\", padding: 0, margin: 0 }}>Probably Not exist... </p>\r\n                                            </div>\r\n                                            <div style={{ display: \"flex\", flexDirection: \"row\", padding: \"0.2rem\", margin: 0 }}>\r\n                                            <p style={{ color: this.state.backgroundColor, backgroundColor: \"#333333\",userSelect: \"none\", padding: 0, margin: 0, fontSize: \"0.7rem\" }}>Is there a problem? Let us know!</p>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    }\r\n                                    Clicked={() => { }}\r\n                                    top={(1 * 7 + 1).toString() + \"rem\"}\r\n                                    BG={this.state.backgroundColor}\r\n                                ></Button>\r\n                        });\r\n                    }\r\n                    else {\r\n                        for (var i in res) {\r\n                            response.push([res[i]])\r\n                        }\r\n                        this.setState({\r\n                            response:\r\n                                <Button\r\n                                NotClick\r\n                                    width=\"auto\"\r\n                                    maxWidth=\"60%\"\r\n                                    right=\"20rem\"\r\n                                    value={\r\n                                        <div\r\n                                            style={{ fontSize: \"1rem\", textAlign: \"left\", padding: 0, margin: 0 }}\r\n                                        >\r\n                                            <div style={{ display: \"flex\", flexDirection: \"row\", padding: \"0.2rem\", margin: 0 }}>\r\n                                                <p style={{ color: this.state.backgroundColor, backgroundColor: \"#333333\", padding: 0, margin: 0 ,userSelect: \"none\"}}>Certificate: </p>\r\n                                                <p style={{ padding: 0, margin: 0 }}>{response[1]}</p>\r\n                                            </div>\r\n                                            <div style={{ display: \"flex\", flexDirection: \"row\", padding: \"0.2rem\", margin: 0 }}>\r\n                                                <p style={{ color: this.state.backgroundColor, backgroundColor: \"#333333\", padding: 0, margin: 0 ,userSelect: \"none\"}}>Receiver: </p>\r\n                                                <p style={{ padding: 0, margin: 0 }}>{response[2]}</p>\r\n                                            </div>\r\n                                            <div style={{ display: \"inline-block\", wordBreak: \"break-word\", padding: \"0.2rem\", margin: 0, overflowWrap: \"break-word\", flexWrap: \"wrap\" }}>\r\n                                                <p style={{ color: this.state.backgroundColor, backgroundColor: \"#333333\", padding: 0, margin: 0,userSelect: \"none\" }}>Certification House:</p>\r\n                                                <p style={{ display: \"inline-block\", wordBreak: \"break-word\", padding: 0, margin: 0, overflowWrap: \"break-word\", flexWrap: \"wrap\" }}>{response[0]}</p>\r\n                                            </div>\r\n                                        </div>}\r\n                                    Clicked={() => { }}\r\n                                    top={(1 * 7 + 1).toString() + \"rem\"}\r\n                                    BG={this.state.backgroundColor}\r\n                                ></Button>\r\n                        })\r\n                    }\r\n                }\r\n            else{\r\n                swal(\r\n                    'Ropsten?', `Failed to reach contract.\\nCheck if Metamask connected to Ropsten Testnet...\\nTry refreshing the page maybe?`, \"error\"\r\n                );\r\n                console.error(\"Probably no metamask!\");\r\n                this.setState({\r\n                    response:null\r\n                });\r\n            }});\r\n        }\r\n            catch{\r\n                swal(\r\n                    'Are you sure?',\"\\\"\".concat(e.target[0].value.concat(`\\\" doesn't look right...\\nTry refreshing page maybe? `)),\"info\"\r\n                    );\r\n                    e.target[0].value = \"\";\r\n                this.setState({\r\n                    response:null\r\n                });\r\n            }\r\n        }\r\n        else{\r\n            this.setState({\r\n                response:null\r\n            });\r\n        }\r\n    };\r\n    render() {\r\n        return (\r\n            <div className=\"Check\">\r\n                <Button\r\n                    value={\"What is the validation number?\"}\r\n                    Clicked={() => { }}\r\n                    top={\"8rem\"}\r\n                    right={\"2rem\"}\r\n                    BG={this.state.backgroundColor}\r\n                >\r\n                    <form\r\n                        style={{ width: \"80%\", display: \"flex\", flexDirection: 'column', padding: \"10%\" }}\r\n                        onSubmit={this.Check}\r\n                    >\r\n                        <input placeholder=\"Certificate Number\" className=\"Input\" />\r\n                        <button className=\"Butone\" type=\"submit\" style={{ color: this.state.backgroundColor }}>Look</button>\r\n                    </form>\r\n                </Button>\r\n                {this.state.response}\r\n            </div>\r\n        )\r\n    };\r\n}\r\n\r\nexport default Check;","import React, { Component } from 'react';\r\nimport Button from '../Button/Button'\r\nimport './House.css'\r\nimport Certification from \"../../contracts/Certification.json\";\r\nimport swal from \"sweetalert\";\r\nconst Web3 = require('web3');\r\n\r\nclass House extends Component {\r\n    state = {\r\n        backgroundColor: \"rgb(242,183,5)\",buttons: [\"Login!\"], web3: null, accounts: [], contract: null, address: null, response: null \r\n    };\r\n\r\n\r\n    Clicked = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            // Get network provider and web3 instance.\r\n            const web3 = await new Web3(window.ethereum);\r\n            await window.ethereum.enable();\r\n            // Use web3 to get the user's accounts.\r\n            const accounts = await web3.eth.getAccounts();\r\n            console.log(\"connected to metamask: \", accounts)\r\n            // Get the contract instance.\r\n            const networkId = await web3.eth.net.getId();\r\n            const instance = new web3.eth.Contract(\r\n                Certification.abi,\r\n                '0x054292065bbec2e6ed374f85e8a938f05f5f2f48',\r\n            );\r\n            // Set web3, accounts, and contract to the state, and then proceed with an\r\n            // example of interacting with the contract's methods.\r\n            this.setState({ web3, accounts, contract: instance }, this.runExample);\r\n            // Get the contract instance.\r\n            this.setState({ buttons: ['Create Certificate', 'Give Certificate', 'See Certificates ', 'See People ',] })\r\n        } catch (error) {\r\n            // Catch any errors for any of the above operations.\r\n            swal(\r\n                'Oops',`Failed to load accounts or contract.\\nCheck if Metamask connected to Ropsten Test Network...\\nTry refreshing the page maybe?`,\"error\"\r\n            );\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    Methods = async (e, key) => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            response:\r\n                <Button\r\n                    width=\"auto\"\r\n                    NotClick\r\n                    maxWidth=\"60%\"\r\n                    left=\"20rem\"\r\n                    value={\r\n                        <div\r\n                            style={{ fontSize: \"1.4rem\", textAlign: \"left\", padding: 0, margin: 0 }}\r\n                        >\r\n                            <div style={{ display: \"flex\", flexDirection: \"row\", padding: \"0.2rem\", margin: 0 }}>\r\n                                <p style={{ color: this.state.backgroundColor, backgroundColor: \"#333333\",userSelect: \"none\", padding: 0, margin: 0 }}>Waiting... </p>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                    key={key}\r\n                    Clicked={() => { }}\r\n                    top={(key * 9 + 1).toString() + \"rem\"}\r\n                    BG={this.state.backgroundColor}\r\n                ></Button>\r\n        });\r\n        try {\r\n            const { web3, accounts, contract } = this.state;\r\n            switch (key) {\r\n                case 1:\r\n                    contract.methods.AddCertificate(e.target[0].value).send({ from: accounts[0] }).on('confirmation', (res) => {\r\n                        try{\r\n                        this.setState({\r\n                            response:\r\n                                <Button\r\n                                NotClick\r\n                                    width=\"auto\"\r\n                                    maxWidth=\"60%\"\r\n                                    left=\"20rem\"\r\n                                    value={\r\n                                        <div\r\n                                            style={{ fontSize: \"1.4rem\", textAlign: \"center\", padding: 0, margin: 0 }}\r\n                                        >\r\n                                            <div style={{ display: \"flex\", flexDirection: \"row\", textAlign: \"center\", padding: \"0.2rem\", margin: 0 }}>\r\n                                                <p style={{ color: this.state.backgroundColor, backgroundColor: \"#333333\",userSelect: \"none\", padding: \"0.2rem\", margin: 0 }}>Confirmed!</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    }\r\n                                    key={key}\r\n                                    Clicked={() => { }}\r\n                                    top={(1 * 9 + 1).toString() + \"rem\"}\r\n                                    BG={this.state.backgroundColor}\r\n                                ></Button>\r\n                        })}\r\n                        catch{\r\n                            swal(\r\n                                'Something terribly went wrong about contract ',`(and we do not know why) `,\"error\"\r\n                            );\r\n                        }\r\n                    }).on('error', () => {\r\n                        this.setState({ response: null });\r\n                        swal(\r\n                            'Not confirmed!',`Your Transaction request resulted in an error...\\nAre you connected to Ropsten TestNet?`,\"error\"\r\n                        );\r\n                    });\r\n                    break;\r\n                case 2:\r\n                    contract.methods.GiveCertificate(e.target[0].value, e.target[1].value).send({ from: accounts[0] }).on('confirmation', (res) => {\r\n                        try{\r\n                        this.setState({\r\n                            response:\r\n                                <Button\r\n                                NotClick\r\n                                    width=\"auto\"\r\n                                    maxWidth=\"60%\"\r\n                                    left=\"20rem\"\r\n                                    value={\r\n                                        <div\r\n                                            style={{ fontSize: \"1.4rem\", textAlign: \"center\", padding: 0, margin: 0 }}\r\n                                        >\r\n                                            <div style={{ display: \"flex\", flexDirection: \"row\", textAlign: \"center\", padding: \"0.2rem\", margin: 0 }}>\r\n                                                <p style={{ color: this.state.backgroundColor, backgroundColor: \"#333333\",userSelect: \"none\", padding: \"0.2rem\", margin: 0 }}>Confirmed! </p>\r\n                                            </div>\r\n                                        </div>\r\n                                    }\r\n                                    key={key}\r\n                                    Clicked={() => { }}\r\n                                    top={(2 * 9 + 1).toString() + \"rem\"}\r\n                                    BG={this.state.backgroundColor}\r\n                                ></Button>\r\n                        })}\r\n                        catch{\r\n                            swal(\r\n                                'Something terribly went wrong about contract ',`(and we do not know why) `,\"error\"\r\n                            );\r\n                        }\r\n                    }).on('error', () => {\r\n                        this.setState({ response: null }); \r\n                        swal(\r\n                            'Not confirmed!',`Your Transaction request resulted in an error...\\nAre you connected to Ropsten TestNet?`,\"error\"\r\n                        );\r\n                    });\r\n                    break;\r\n                case 3:\r\n                    contract.methods.SeeCertificates(e.target[0].value).call({ from: accounts[0] }, (err, res) => {\r\n                        try{\r\n                        if(res){\r\n                        let response = [];\r\n                        for (var i in res) {\r\n                            response.push([res[i]])\r\n                        }\r\n                        this.setState({\r\n                            response:\r\n                                <Button\r\n                                NotClick\r\n                                    width=\"auto\"\r\n                                    maxWidth=\"60%\"\r\n                                    left=\"20rem\"\r\n                                    value={\r\n                                        <div\r\n                                            style={{ fontSize: \"1rem\", textAlign: \"left\", padding: 0, margin: 0 }}\r\n                                        >\r\n                                            <div style={{ display: \"flex\", flexDirection: \"row\", padding: \"0.2rem\", margin: 0 }}>\r\n                                                <p style={{ color: this.state.backgroundColor, backgroundColor: \"#333333\", padding: 0, margin: 0 ,userSelect: \"none\"}}>Name: </p>\r\n                                                <p style={{ padding: 0, margin: 0 }}>{response[0]}</p>\r\n                                            </div>\r\n                                            <div style={{ display: \"flex\", flexDirection: \"row\", padding: \"0.2rem\", margin: 0 }}>\r\n                                                <p style={{ color: this.state.backgroundColor, backgroundColor: \"#333333\", padding: 0, margin: 0 ,userSelect: \"none\"}}>Count: </p>\r\n                                                <p style={{ padding: 0, margin: 0 }}>{response[2]}</p>\r\n                                            </div>\r\n                                            <div style={{ display: \"inline-block\", wordBreak: \"break-word\", padding: \"0.2rem\", margin: 0, overflowWrap: \"break-word\", flexWrap: \"wrap\" }}>\r\n                                                <p style={{ color: this.state.backgroundColor, backgroundColor: \"#333333\", padding: 0, margin: 0 ,userSelect: \"none\"}}>Validation Number:</p>\r\n                                                <p style={{ display: \"inline-block\", wordBreak: \"break-word\", padding: 0, margin: 0, overflowWrap: \"break-word\", flexWrap: \"wrap\" }}>{response[1]}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    }\r\n                                    key={key}\r\n                                    Clicked={() => { }}\r\n                                    top={(key * 9 + 1).toString() + \"rem\"}\r\n                                    BG={this.state.backgroundColor}\r\n                                ></Button>\r\n                        })\r\n                    }\r\n                else{\r\n                    this.setState({\r\n                        response:\r\n                            <Button\r\n                                NotClick\r\n                                width=\"auto\"\r\n                                maxWidth=\"60%\"\r\n                                left=\"20rem\"\r\n                                value={\r\n                                    <div\r\n                                        style={{ fontSize: \"1.4rem\", textAlign: \"left\", padding: 0, margin: 0 }}\r\n                                    >\r\n                                        <div style={{ display: \"flex\", flexDirection: \"row\", padding: \"0.2rem\", margin: 0 }}>\r\n                                            <p style={{ color: this.state.backgroundColor, backgroundColor: \"#333333\", padding: 0, margin: 0 }}>Certificate not exist...</p>\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n                                key={key}\r\n                                Clicked={() => { }}\r\n                                top={(key * 9 + 1).toString() + \"rem\"}\r\n                                BG={this.state.backgroundColor}\r\n                            ></Button>\r\n                    });\r\n                }\r\n                }\r\n                    catch{\r\n                        this.setState({ response: null }); \r\n                        if(err){\r\n                            console.log(err);\r\n                        }\r\n                        swal(\r\n                            'Not confirmed!',`Your Transaction request resulted in an error...\\nAre you connected to Ropsten TestNet?`,\"error\"\r\n                        );\r\n                    }\r\n                });\r\n                    break;\r\n                case 4:\r\n                    contract.methods.SeePeople(e.target[0].value, e.target[1].value).call({ from: accounts[0] }, (err, res) => {\r\n                        try{\r\n                        if(res){\r\n                        let response = [];\r\n                        for (var i in res) {\r\n                            response.push([res[i]])\r\n                        }\r\n                        this.setState({\r\n                            response:\r\n                                <Button\r\n                                NotClick\r\n                                    width=\"auto\"\r\n                                    maxWidth=\"60%\"\r\n                                    left=\"20rem\"\r\n                                    value={\r\n                                        <div\r\n                                            style={{ fontSize: \"1rem\", textAlign: \"left\", padding: 0, margin: 0 }}\r\n                                        >\r\n                                            <div style={{ display: \"flex\", flexDirection: \"row\", padding: \"0.2rem\", margin: 0 }}>\r\n                                                <p style={{ color: this.state.backgroundColor, backgroundColor: \"#333333\",userSelect: \"none\", padding: 0, margin: 0 }}>Name: </p>\r\n                                                <p style={{ padding: 0, margin: 0 }}>{response[0]}</p>\r\n                                            </div>\r\n                                            <div style={{ display: \"inline-block\", wordBreak: \"break-word\", padding: \"0.2rem\", margin: 0, overflowWrap: \"break-word\", flexWrap: \"wrap\" }}>\r\n                                                <p style={{ color: this.state.backgroundColor, backgroundColor: \"#333333\",userSelect: \"none\", padding: 0, margin: 0 }}>Certification Number:</p>\r\n                                                <p style={{ display: \"inline-block\", wordBreak: \"break-word\", padding: 0, margin: 0, overflowWrap: \"break-word\", flexWrap: \"wrap\" }}>{response[1]}</p>\r\n                                            </div>\r\n                                        </div>}\r\n                                    key={key}\r\n                                    Clicked={() => { }}\r\n                                    top={(key * 9 + 1).toString() + \"rem\"}\r\n                                    BG={this.state.backgroundColor}\r\n                                ></Button>\r\n                        })\r\n\r\n                    }\r\n                else{\r\n                    this.setState({\r\n                        response:\r\n                            <Button\r\n                                width=\"auto\"\r\n                                maxWidth=\"60%\"\r\n                                left=\"20rem\"\r\n                                value={\r\n                                    <div\r\n                                        style={{ fontSize: \"1.4rem\", textAlign: \"left\", padding: 0, margin: 0 }}\r\n                                    >\r\n                                        <div style={{ display: \"flex\", flexDirection: \"row\", padding: \"0.2rem\", margin: 0 }}>\r\n                                            <p style={{ color: this.state.backgroundColor, backgroundColor: \"#333333\",userSelect: \"none\", padding: 0, margin: 0 }}>Person not exist...</p>\r\n                                        </div>\r\n                                        <div style={{ display: \"flex\", flexDirection: \"row\", padding: \"0.2rem\", margin: 0 }}>\r\n                                            <p style={{ fontSize:\"1rem\", color: this.state.backgroundColor, backgroundColor: \"#333333\",userSelect: \"none\", padding: 0, margin: 0 }}>Maybe deleted. </p>\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n                                key={key}\r\n                                Clicked={() => { }}\r\n                                top={(key * 9 + 1).toString() + \"rem\"}\r\n                                BG={this.state.backgroundColor}\r\n                            ></Button>\r\n                    });\r\n                }\r\n                }\r\n                    catch{\r\n                        this.setState({ response: null }); \r\n                        if(err){\r\n                            console.log(err);\r\n                        }\r\n                        swal(\r\n                            'Not confirmed!',`Your Transaction request resulted in an error...\\nAre you connected to Ropsten TestNet?`,\"error\"\r\n                        );\r\n                    }\r\n                });\r\n                    break;\r\n\r\n            }\r\n            e.target[0].value = \"\";\r\n            e.target[1].value = \"\";\r\n        }\r\n        catch{\r\n            swal(\r\n                'Are you sure?',`Index starts from 0 and goes up.\\n Is \\\"`.concat(e.target[0].value).concat(`\\\" appropriate?`),\"info\"\r\n                );\r\n                e.target[0].value = \"\";\r\n                e.target[1].value = \"\";\r\n            console.log(\"A problem occured...\")\r\n            this.setState({ response: null }); \r\n        }\r\n\r\n    };\r\n    render() {\r\n        if (this.state.buttons.length === 1) {\r\n            var buttons = this.state.buttons.map(b => {\r\n                return <Button\r\n                    left=\"2rem\"\r\n                    value={b}\r\n                    key={1}\r\n                    Clicked={this.Clicked}\r\n                    top={(1 * 7 + 1).toString() + \"rem\"}\r\n                    BG={this.state.backgroundColor}\r\n                >\r\n                </Button>\r\n            });\r\n        }\r\n        else {\r\n            let num = 0;\r\n            var buttons = this.state.buttons.map(b => {\r\n                num++;\r\n                let inside;\r\n                if (num === 1) inside =\r\n                    <form\r\n                        style={{ width: \"80%\", display: \"flex\", flexDirection: 'column', padding: \"10%\" }}\r\n                        onSubmit={(e) => this.Methods(e, 1)}>\r\n                        <input placeholder=\"Name\" className=\"Input\" />\r\n                        <button className=\"Butone\" type=\"submit\" style={{ color: this.state.backgroundColor }}>Create</button>\r\n                    </form>\r\n\r\n                if (num === 2) inside =\r\n                    <form\r\n                        style={{ width: \"80%\", display: \"flex\", flexDirection: 'column', padding: \"10%\" }}\r\n                        onSubmit={(e) => this.Methods(e, 2)}>\r\n                        <input placeholder=\"Certificate Index\" className=\"Input\" />\r\n                        <input placeholder=\"Person name\" className=\"Input\" />\r\n                        <button className=\"Butone\" type=\"submit\" style={{ color: this.state.backgroundColor }}>Give</button>\r\n                    </form>\r\n                if (num === 3) inside =\r\n                    <form\r\n                        style={{ width: \"80%\", display: \"flex\", flexDirection: 'column', padding: \"10%\" }}\r\n                        onSubmit={(e) => this.Methods(e, 3)}>\r\n                        <input placeholder=\"Certificate Index\" className=\"Input\" />\r\n                        <button className=\"Butone\" type=\"submit\" style={{ color: this.state.backgroundColor }}>Look</button>\r\n                    </form>\r\n                if (num === 4) inside =\r\n                    <form\r\n                        style={{ width: \"80%\", display: \"flex\", flexDirection: 'column', padding: \"10%\" }}\r\n                        onSubmit={(e) => this.Methods(e, 4)}>\r\n                        <input placeholder=\"Certificate Index\" className=\"Input\" />\r\n                        <input placeholder=\"Person Index\" className=\"Input\" />\r\n                        <button className=\"Butone\" type=\"submit\" style={{ color: this.state.backgroundColor }}>Look</button>\r\n                    </form>\r\n                return <Button\r\n                    left=\"2rem\"\r\n                    value={b}\r\n                    key={num}\r\n                    Clicked={() => { }}\r\n                    top={(num * 9 + 1).toString() + \"rem\"}\r\n                    BG={this.state.backgroundColor}\r\n                >{inside}</Button>\r\n            }\r\n            )\r\n        }\r\n        return (\r\n            <div className=\"Home\">\r\n                {buttons}\r\n                {this.state.response}\r\n                <div style={{position:\"fixed\",left:\"2rem\",top:\"5em\",padding:\"0px\",margin:\"0px\",fontSize:\"1.4rem\",zIndex:\"10000\", userSelect:\"none\"}}>{this.state.accounts[0]}</div>\r\n                <div style={{position:\"fixed\",left:\"2rem\",bottom:\"1em\",padding:\"0px\",margin:\"0px\",fontSize:\"1.4rem\",zIndex:\"10000\",color:\"white\" , userSelect:\"none\"}}>{this.state.accounts[0]}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default House;\r\n\r\n","import React, { Component } from 'react';\r\nimport './HomeContent.css'\r\nclass HomeContent extends Component {\r\n    componentDidMount() {\r\n        console.log(this.props)\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"Content\" style={{ color: this.props.mode === \"black\" ? \"white\" : \"black\" }} >\r\n                <p className=\"Information\" style={{ top: \"17rem\", fontSize: \"1.8rem\" }}>A Secure Gate to enter your Certification House!</p>\r\n                <p className=\"Information\" style={{ top: \"23rem\", fontSize: \"1.4rem\" }}>SecureGate is a Secure Certification Factory, powered on Ethereum Blockchain...You can interact with it via web3 components such as Metamask.</p>\r\n                <p className=\"Information\" style={{ top: \"30rem\", fontSize: \"1.4rem\" }}>SecureGate is running on Ropsten Test Network. Since it is still under construction interface we do not recommend it for commercial usage. Our address:</p>\r\n                <p className=\"Information\" style={{ top: \"37rem\", fontSize: \"1.2rem\" }}>Smart Contract Address:: <a style={{ display: \"table-cell\" }} href=\"https://ropsten.etherscan.io/address/0x054292065bbec2e6ed374f85e8a938f05f5f2f48\" target=\"_blank\">0x054292065bbec2e6ed374f85e8a938f05f5f2f48</a></p>\r\n                <p className=\"Information\" style={{ top: \"42rem\", fontSize: \"1rem\" }}>We are trying to develop bug-free and refreshing interface for the ease of use of a contract Dapp. If you'd like to help us, see our code or the contract details; you can reach us by clicking to the github icon.</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default HomeContent;","import React, { Component, Fragment } from 'react';\r\nimport './Home.css'\r\nimport Button from '../Button/Button';\r\nimport HomeContent from './HomeContent/HomeContent';\r\nclass Home extends Component {\r\n    state = {\r\n        homeContent: < HomeContent\r\n            mode={this.props.mode}\r\n            className=\"Content\">\r\n        </HomeContent>, backgroundColor: \"rgb(4,173,191)\"\r\n    }\r\n    Clicked = () => {\r\n        if (this.state.homeContent) {\r\n            this.setState({ homeContent: null })\r\n        }\r\n        else {\r\n            this.setState({\r\n                homeContent: <HomeContent\r\n                    mode={this.props.mode}\r\n                    className=\"Content\"\r\n                ></HomeContent>\r\n            })\r\n        };\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"Home\"\r\n                style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}\r\n            >\r\n                <Button\r\n                    value={\r\n                        <div style={{ display: \"flex\", flexDirection: \"row\", padding: \"1rem\", margin: 0, alignItems: 'center', justifyContent: 'space-around' }}>\r\n                            <div className=\"Logo\"></div>\r\n                            <div>SecureGate</div>\r\n                        </div>\r\n                    }\r\n                    Clicked={this.Clicked}\r\n                    top={(1 * 7 + 1).toString() + \"rem\"}\r\n                    BG={this.state.backgroundColor}\r\n                />\r\n                {this.state.homeContent}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Home;","import React, { Fragment } from 'react';\r\nimport './Social.css'\r\n//import github from './github.png'\r\nconst Social = (props) => {\r\n    var mode=\"ModeWhite\"\r\n    var invertStyle=null;\r\n    if(props.mode===\"black\"){\r\n        mode=\"ModeBlack\"\r\n        invertStyle=\"invert(1)\"\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <a style={{ right: \"3em\" ,filter:invertStyle}} href=\"https://github.com/Akif-G/SecureTificate\" className=\"InteractiveButton\" id=\"Github\"></a>\r\n            <div style={{ right: \"8em\" }} onClick={props.ChangeMode} className=\"InteractiveButton\" id={mode} ></div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Social;","import React, { Component } from \"react\";\nimport Toolbar from './Components/Toolbar/Toolbar'\nimport './App.css'\nimport { Route, Switch, HashRouter } from 'react-router-dom'\nimport BackGround from './Components/Background/Background'\nimport \"./App.css\";\nimport Check from \"./Components/Check/Check\";\nimport House from \"./Components/House/House\";\nimport Home from \"./Components/Home/Home\";\nimport Social from \"./Components/Social/Social\";\n\nclass App extends Component {\n  state = {\n    mode: \"white\"\n  }\n  ChangeMode = () => {\n    if (this.state.mode === \"white\") { this.setState({ mode: \"black\" }); }\n    else if (this.state.mode === \"black\") { this.setState({ mode: \"white\" }); };\n  }\n\n\n  render() {\n    var backGround;\n    if (this.state.mode === \"white\") {\n      backGround =\n        <BackGround className=\"BackGround\" mode={\"white\"} key={this.state.mode} style={{ width: '90%', height: window.innerHeight }}></BackGround>;\n    }\n    if (this.state.mode === \"black\") {\n      backGround =\n        <BackGround className=\"BackGround\" mode={\"black\"} key={this.state.mode} style={{ width: '90%', height: window.innerHeight }}></BackGround>;\n    }\n    return (<HashRouter basename=\"/\">\n      <div className=\"App\">\n        <Toolbar className=\"ToolBar\" />\n        <Switch>\n          <Route path=\"/check\" exact component={Check} />\n          <Route path=\"/house\" exact component={House} />\n          <Route path=\"/\" exact component={() => (<Home mode={this.state.mode} />)} />\n          <Route component={() => (<Home mode={this.state.mode} />)} />\n        </Switch>\n        {backGround}\n        <Social ChangeMode={this.ChangeMode} mode={this.state.mode}></Social>\n      </div>\n    </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom'\n\nReactDOM.render(\n    <BrowserRouter>\n        <App/>\n    </BrowserRouter>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}